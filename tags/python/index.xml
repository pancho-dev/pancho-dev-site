<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on pancho.dev</title>
    <link>http://pancho.dev/tags/python/</link>
    <description>Recent content in Python on pancho.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 24 Oct 2020 11:30:35 -0300</lastBuildDate>
    
	<atom:link href="http://pancho.dev/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Watch out with cloud storage API calls!!!</title>
      <link>http://pancho.dev/posts/watch_out_cloud_storage/</link>
      <pubDate>Sat, 24 Oct 2020 11:30:35 -0300</pubDate>
      
      <guid>http://pancho.dev/posts/watch_out_cloud_storage/</guid>
      <description>One of the most popular services from cloud providers is cloud storage, to be more specific AWS S3, Google Cloud Storage, Azure Storage or any similar service from other cloud providers. This service is very convenient for developers and SREs or System Admins, it solves the problem of managing disks, storage devices , storage servers, etc at a very low cost for storing files, depending on the cloud provider, some of them even offer a staggering 99.</description>
    </item>
    
    <item>
      <title>What&#39;s a ULID</title>
      <link>http://pancho.dev/posts/whats-ulid/</link>
      <pubDate>Sat, 27 Jun 2020 14:35:31 -0300</pubDate>
      
      <guid>http://pancho.dev/posts/whats-ulid/</guid>
      <description>This time I will talk about something I found out very recently, and I found interesting to share this information as it might be handy for developers to use when the use case fits.
So this time I will introduce the ulid. Spoiler alert, it&amp;rsquo;s an ID or at least a data structure that can be used to represent an ID. So why do we have another way of expressing an ID, I won&amp;rsquo;t get into too much details into that but yes there are many ways of defining ids, it can be numerical, using UUIDs, etc.</description>
    </item>
    
  </channel>
</rss>